<Window x:Class="PixelWallE.WPF.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
        xmlns:viewModels="clr-namespace:PixelWallE.WPF.ViewModels"
        xmlns:behaviors="clr-namespace:PixelWallE.WPF.Behaviors"
        xmlns:coreCommon="clr-namespace:PixelWallE.Core.Common;assembly=PixelWallE.Core"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        mc:Ignorable="d"
        Title="{Binding WindowTitle}"
        Height="800" Width="1400"
        MinHeight="650" MinWidth="1100"
        WindowStartupLocation="CenterScreen"
        Background="{DynamicResource ApplicationBackgroundBrush}"
        Foreground="{DynamicResource TextBrush}">

    <Window.DataContext>
        <viewModels:MainViewModel />
    </Window.DataContext>

    <Window.Resources>
        <!-- Array para el ComboBox de modos de ejecución -->
        <x:Array x:Key="ExecutionModes" Type="coreCommon:ExecutionMode">
            <coreCommon:ExecutionMode>Instant</coreCommon:ExecutionMode>
            <coreCommon:ExecutionMode>StepByStep</coreCommon:ExecutionMode>
            <coreCommon:ExecutionMode>PixelByPixel</coreCommon:ExecutionMode>
        </x:Array>

        <!-- Estilo para los botones de la barra de comandos lateral -->
        <Style x:Key="CommandBarButton" TargetType="Button">
            <Setter Property="Width" Value="48"/>
            <Setter Property="Height" Value="48"/>
            <Setter Property="Margin" Value="0,4"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource MutedBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="6">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource LightBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource BorderBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Estilo moderno para GroupBox -->
        <Style x:Key="ModernGroupBox" TargetType="GroupBox">
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GroupBox">
                        <Border Background="{DynamicResource ControlBackgroundBrush}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Border Padding="12,8" BorderThickness="0,0,0,1" BorderBrush="{TemplateBinding BorderBrush}">
                                    <ContentPresenter ContentSource="Header" TextElement.FontWeight="SemiBold" />
                                </Border>
                                <ContentPresenter Grid.Row="1" Margin="{TemplateBinding Padding}" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <!-- Estructura principal de la ventana -->
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" /> <!-- Barra de Comandos -->
            <ColumnDefinition Width="*" />    <!-- Contenido Principal -->
        </Grid.ColumnDefinitions>

        <!-- Barra de Comandos Vertical (Izquierda) -->
        <Border Grid.Column="0" Background="{DynamicResource ControlBackgroundBrush}" Padding="4">
            <StackPanel>
                <!-- Botón de Ejecutar/Parar -->
                <Button Style="{StaticResource CommandBarButton}" ToolTip="Run (F5)"
                        Command="{Binding RunCommand}"
                        Visibility="{Binding IsExecuting, Converter={StaticResource InverseBoolToVisConverter}}">
                    <iconPacks:PackIconMaterial Kind="Play" Width="24" Height="24" Foreground="{DynamicResource SuccessBrush}"/>
                </Button>
                <Button Style="{StaticResource CommandBarButton}" ToolTip="Stop"
                        Command="{Binding StopExecutionCommand}"
                        Visibility="{Binding IsExecuting, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <iconPacks:PackIconMaterial Kind="Stop" Width="24" Height="24" Foreground="{DynamicResource DangerBrush}"/>
                </Button>

                <Separator Margin="4,8" Background="{DynamicResource BorderBrush}"/>

                <!-- Comandos de Archivo -->
                <Button Style="{StaticResource CommandBarButton}" ToolTip="New File" Command="{Binding NewFileCommand}">
                    <iconPacks:PackIconMaterial Kind="FileOutline" Width="22" Height="22"/>
                </Button>
                <Button Style="{StaticResource CommandBarButton}" ToolTip="Open File..." Command="{Binding OpenFileCommand}">
                    <iconPacks:PackIconMaterial Kind="FolderOpenOutline" Width="22" Height="22"/>
                </Button>
                <Button Style="{StaticResource CommandBarButton}" ToolTip="Save File" Command="{Binding SaveFileCommand}">
                    <iconPacks:PackIconMaterial Kind="ContentSave" Width="22" Height="22"/>
                </Button>

                <Separator Margin="4,8" Background="{DynamicResource BorderBrush}"/>

                <!-- Comandos de Edición/Imagen -->
                <Button Style="{StaticResource CommandBarButton}" ToolTip="Reset Canvas" Command="{Binding ResetCanvasCommand}">
                    <iconPacks:PackIconMaterial Kind="Refresh" Width="22" Height="22"/>
                </Button>
                <Button Style="{StaticResource CommandBarButton}" ToolTip="Save Image As..." Command="{Binding SaveImageCommand}">
                    <iconPacks:PackIconMaterial Kind="ImageEditOutline" Width="22" Height="22"/>
                </Button>
                
                <!-- Menú desplegable para temas y otras opciones -->
                <Button x:Name="SettingsButton" Style="{StaticResource CommandBarButton}" ToolTip="Settings" Click="SettingsButton_Click">
                     <iconPacks:PackIconMaterial Kind="CogOutline" Width="22" Height="22"/>
                    <Button.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Change Theme">
                                <MenuItem Header="Light Mode" Click="SwitchToLight_Click"/>
                                <MenuItem Header="Dark Mode" Click="SwitchToDark_Click"/>
                            </MenuItem>
                            <Separator/>
                            <MenuItem Header="Exit" Click="Exit_Click"/>
                        </ContextMenu>
                    </Button.ContextMenu>
                </Button>

            </StackPanel>
        </Border>

        <!-- Área de Contenido Principal -->
        <Grid Grid.Column="1" Margin="12,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" /> <!-- Barra de herramientas superior -->
                <RowDefinition Height="*" />    <!-- Editor y Canvas -->
                <RowDefinition Height="Auto" /> <!-- Splitter -->
                <RowDefinition Height="200" />   <!-- Consola -->
            </Grid.RowDefinitions>

            <!-- Barra de Herramientas de Configuración -->
            <Border Grid.Row="0" Margin="0,0,0,12">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <!-- Configuración de Modo -->
                    <Border Background="{DynamicResource ControlBackgroundBrush}" CornerRadius="6" Padding="12,8" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1">
                        <StackPanel Orientation="Horizontal">
                            <iconPacks:PackIconMaterial Kind="Tune" VerticalAlignment="Center" Foreground="{DynamicResource MutedBrush}" Margin="0,0,8,0" />
                            <TextBlock Text="Mode:" VerticalAlignment="Center" Foreground="{DynamicResource MutedBrush}" FontWeight="Medium" Margin="0,0,8,0" />
                            <ComboBox Style="{StaticResource ModernComboBox}" Width="130" VerticalAlignment="Center" ItemsSource="{Binding Source={StaticResource ExecutionModes}}" SelectedItem="{Binding SelectedExecutionMode}" />
                        </StackPanel>
                    </Border>
                    <!-- Configuración de Velocidad -->
                    <Border Background="{DynamicResource ControlBackgroundBrush}" CornerRadius="6" Padding="12,8" Margin="12,0,0,0" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1">
                        <StackPanel Orientation="Horizontal">
                            <iconPacks:PackIconMaterial Kind="Speedometer" VerticalAlignment="Center" Foreground="{DynamicResource MutedBrush}" Margin="0,0,8,0" />
                            <Slider Minimum="0" Maximum="500" Width="120" VerticalAlignment="Center" Value="{Binding ExecutionDelay, Delay=100}" IsSnapToTickEnabled="True" TickFrequency="50" />
                            <TextBlock Text="{Binding ExecutionSpeedText}" VerticalAlignment="Center" Margin="8,0,0,0" FontStyle="Italic" Foreground="{DynamicResource MutedBrush}" MinWidth="60" />
                        </StackPanel>
                    </Border>
                    <!-- Configuración de Canvas -->
                     <Border Background="{DynamicResource ControlBackgroundBrush}" CornerRadius="6" Padding="12,8" Margin="12,0,0,0" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1">
                        <StackPanel Orientation="Horizontal">
                            <iconPacks:PackIconMaterial Kind="AspectRatio" VerticalAlignment="Center" Foreground="{DynamicResource MutedBrush}" Margin="0,0,8,0" />
                            <TextBox Style="{StaticResource ModernTextBox}" Text="{Binding CanvasWidth, UpdateSourceTrigger=PropertyChanged, Delay=200}" Width="50" VerticalContentAlignment="Center" TextAlignment="Center" />
                            <TextBlock Text="×" VerticalAlignment="Center" Margin="6,0" Foreground="{DynamicResource MutedBrush}" />
                            <TextBox Style="{StaticResource ModernTextBox}" Text="{Binding CanvasHeight, UpdateSourceTrigger=PropertyChanged, Delay=200}" Width="50" VerticalContentAlignment="Center" TextAlignment="Center" />
                        </StackPanel>
                    </Border>
                </StackPanel>
            </Border>

            <!-- Editor y Canvas -->
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" MinWidth="350" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" MinWidth="350" />
                </Grid.ColumnDefinitions>

                <!-- Editor de Código -->
                <GroupBox Grid.Column="0" Margin="0,0,6,0" Style="{StaticResource ModernGroupBox}">
                    <GroupBox.Header>
                        <StackPanel Orientation="Horizontal">
                            <iconPacks:PackIconMaterial Kind="Xml" VerticalAlignment="Center" Margin="0,0,8,0" />
                            <TextBlock Text="Code Editor" />
                        </StackPanel>
                    </GroupBox.Header>
                    <!-- EDITOR DE CÓDIGO CORREGIDO: Se usan recursos dinámicos para los colores -->
                    <avalonedit:TextEditor x:Name="CodeEditor"
                                           FontFamily="Cascadia Code, Consolas, 'Courier New', monospace"
                                           FontSize="14"
                                           behaviors:TextEditorBehavior.BoundText="{Binding SourceCode, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                           ShowLineNumbers="True"
                                           Padding="8"
                                           Background="{DynamicResource ControlBackgroundBrush}"
                                           Foreground="{DynamicResource TextBrush}"
                                           LineNumbersForeground="{DynamicResource MutedBrush}" />
                </GroupBox>

                <GridSplitter Grid.Column="1" Width="12" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="Transparent" />

                <!-- Visualizador de Imagen -->
                <GroupBox Grid.Column="2" Margin="6,0,0,0" Style="{StaticResource ModernGroupBox}">
                    <GroupBox.Header>
                        <StackPanel Orientation="Horizontal">
                            <iconPacks:PackIconMaterial Kind="Image" VerticalAlignment="Center" Margin="0,0,8,0" />
                            <TextBlock Text="Canvas Preview" />
                            <TextBlock Text=" - " Margin="4,0" Foreground="{DynamicResource MutedBrush}"/>
                             <TextBlock Text="{Binding StatusMessage}" VerticalAlignment="Center" FontWeight="Normal" Foreground="{DynamicResource MutedBrush}"/>
                        </StackPanel>
                    </GroupBox.Header>
                    <Grid>
                        <Grid.Background>
                            <DrawingBrush Viewport="0,0,20,20" ViewportUnits="Absolute" TileMode="Tile">
                                <DrawingBrush.Drawing>
                                    <DrawingGroup>
                                        <GeometryDrawing Brush="{DynamicResource ControlBackgroundBrush}"><GeometryDrawing.Geometry><RectangleGeometry Rect="0,0,20,20" /></GeometryDrawing.Geometry></GeometryDrawing>
                                        <GeometryDrawing Brush="{DynamicResource ApplicationBackgroundBrush}"><GeometryDrawing.Geometry><GeometryGroup><RectangleGeometry Rect="0,0,10,10" /><RectangleGeometry Rect="10,10,10,10" /></GeometryGroup></GeometryDrawing.Geometry></GeometryDrawing>
                                    </DrawingGroup>
                                </DrawingBrush.Drawing>
                            </DrawingBrush>
                        </Grid.Background>
                        <Image Source="{Binding RenderedImage}" Stretch="Uniform" RenderOptions.BitmapScalingMode="NearestNeighbor" Margin="8" />
                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsExecuting}" Value="False" />
                                                <Condition Binding="{Binding RenderedImage}" Value="{x:Null}" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility" Value="Visible" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <iconPacks:PackIconMaterial Kind="Palette" Width="48" Height="48" HorizontalAlignment="Center" Foreground="{DynamicResource MutedBrush}" Margin="0,0,0,16" />
                            <TextBlock Text="Canvas is Empty" FontSize="16" FontWeight="SemiBold" HorizontalAlignment="Center" Foreground="{DynamicResource TextBrush}" />
                            <TextBlock Text="Click 'Run' to see your creation" FontSize="14" HorizontalAlignment="Center" Foreground="{DynamicResource MutedBrush}" Margin="0,4,0,0" />
                        </StackPanel>
                        <Border HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="15" Background="#A0000000" CornerRadius="6" Padding="10,8" Visibility="{Binding IsExecuting, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <StackPanel Orientation="Horizontal">
                                <iconPacks:PackIconMaterial Kind="Sync" Width="16" Height="16" Foreground="White" VerticalAlignment="Center">
                                    <iconPacks:PackIconMaterial.RenderTransform><RotateTransform Angle="0" CenterX="8" CenterY="8" /></iconPacks:PackIconMaterial.RenderTransform>
                                    <iconPacks:PackIconMaterial.Triggers>
                                        <EventTrigger RoutedEvent="Loaded">
                                            <BeginStoryboard><Storyboard><DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" From="0" To="360" Duration="0:0:1.5" RepeatBehavior="Forever" /></Storyboard></BeginStoryboard>
                                        </EventTrigger>
                                    </iconPacks:PackIconMaterial.Triggers>
                                </iconPacks:PackIconMaterial>
                                <TextBlock Text="Executing..." Foreground="White" FontSize="13" VerticalAlignment="Center" Margin="8,0,0,0" FontWeight="Medium" />
                            </StackPanel>
                        </Border>
                    </Grid>
                </GroupBox>
            </Grid>

            <GridSplitter Grid.Row="2" Height="12" HorizontalAlignment="Stretch" VerticalAlignment="Center" Background="Transparent" />

            <!-- Consola de Salida -->
            <GroupBox Grid.Row="3" Margin="0,6,0,0" Style="{StaticResource ModernGroupBox}">
                <GroupBox.Header>
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconMaterial Kind="Console" VerticalAlignment="Center" Margin="0,0,8,0" />
                        <TextBlock Text="Output Console" />
                    </StackPanel>
                </GroupBox.Header>
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                    <ListBox ItemsSource="{Binding Messages}" FontFamily="Cascadia Code, Consolas, 'Courier New', monospace" FontSize="13" Background="Transparent" BorderThickness="0" SelectionMode="Extended">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="Padding" Value="8,4" /><Setter Property="BorderThickness" Value="0" /><Setter Property="Margin" Value="0,1" /><Setter Property="Foreground" Value="{DynamicResource MutedBrush}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=., Converter={StaticResource StringContainsConverter}, ConverterParameter='✗'}" Value="True"><Setter Property="Foreground" Value="{DynamicResource DangerBrush}" /></DataTrigger>
                                    <DataTrigger Binding="{Binding Path=., Converter={StaticResource StringContainsConverter}, ConverterParameter='✓'}" Value="True"><Setter Property="Foreground" Value="{DynamicResource SuccessBrush}" /></DataTrigger>
                                    <DataTrigger Binding="{Binding Path=., Converter={StaticResource StringContainsConverter}, ConverterParameter='🖼️'}" Value="True"><Setter Property="Foreground" Value="{DynamicResource InfoBrush}" /></DataTrigger>
                                    <DataTrigger Binding="{Binding Path=., Converter={StaticResource StringContainsConverter}, ConverterParameter='🎨'}" Value="True"><Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}" /></DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </ScrollViewer>
            </GroupBox>
        </Grid>
    </Grid>
</Window>
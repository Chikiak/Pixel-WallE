<Window x:Class="PixelWallE.WPF.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:viewModels="clr-namespace:PixelWallE.WPF.ViewModels"
    xmlns:behaviors="clr-namespace:PixelWallE.WPF.Behaviors"
    xmlns:converters="clr-namespace:PixelWallE.WPF.Converters"
    mc:Ignorable="d"
    Title="{Binding WindowTitle}" 
    Height="800" Width="1400"
    MinHeight="600" MinWidth="1000"
    WindowStartupLocation="CenterScreen"
    Background="#F0F2F5">
    
    <Window.DataContext>
        <viewModels:MainViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBoolToVisConverter"/>
        <converters:StringContainsConverter x:Key="StringContainsConverter"/>
        
        <x:Array x:Key="ExecutionModes" Type="viewModels:ExecutionMode">
            <viewModels:ExecutionMode>Instant</viewModels:ExecutionMode>
            <viewModels:ExecutionMode>StepByStep</viewModels:ExecutionMode>
            <viewModels:ExecutionMode>PixelByPixel</viewModels:ExecutionMode>
        </x:Array>
    </Window.Resources>

    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="200"/>
        </Grid.RowDefinitions>

        <!-- Menu Bar -->
        <Menu Grid.Row="0" Margin="0,0,0,5" Background="WhiteSmoke">
            <MenuItem Header="_File">
                <MenuItem Header="_New" Command="{Binding NewFileCommand}"/>
                <MenuItem Header="_Open..." Command="{Binding OpenFileCommand}"/>
                <Separator/>
                <MenuItem Header="_Save" Command="{Binding SaveFileCommand}" InputGestureText="Ctrl+S"/>
                <MenuItem Header="Save _As..." Command="{Binding SaveFileAsCommand}"/>
                <Separator/>
                <MenuItem Header="E_xit" Click="Exit_Click"/>
            </MenuItem>
            <MenuItem Header="_Image">
                <MenuItem Header="Save Image _As..." Command="{Binding SaveImageCommand}"/>
                <MenuItem Header="Load _Background..." Command="{Binding LoadBackgroundImageCommand}"/>
                <MenuItem Header="Clear Background" Command="{Binding ClearBackgroundImageCommand}"/>
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="Clear _Output" Command="{Binding ClearOutputCommand}"/>
                <MenuItem Header="Reset _Code" Command="{Binding ResetCodeCommand}"/>
                <!-- NUEVO: Agregar Reset Canvas al menú -->
                <MenuItem Header="Reset _Canvas" Command="{Binding ResetCanvasCommand}"/>
            </MenuItem>
        </Menu>

        <!-- Toolbar -->
        <Border Grid.Row="1" Background="White" BorderBrush="#DEE2E6" 
                BorderThickness="0,0,0,1" Padding="10" Margin="0,0,0,10" CornerRadius="4">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- CORRECCIÓN: Agregar botón Reset Canvas en la toolbar -->
                <StackPanel Grid.Column="0" Orientation="Horizontal">
                    <Button Content="▶ Run" Padding="20,8" FontWeight="Bold" Command="{Binding RunCommand}" Background="#28A745" Foreground="White"
                            Visibility="{Binding IsExecuting, Converter={StaticResource InverseBoolToVisConverter}}"/>
                    <Button Content="■ Stop" Padding="20,8" FontWeight="Bold" Command="{Binding StopExecutionCommand}" Background="#DC3545" Foreground="White"
                            Visibility="{Binding IsExecuting, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    
                    <!-- NUEVO: Botón Reset Canvas -->
                    <Button Content="🎨 Reset Canvas" Padding="15,8" Margin="10,0,0,0" Command="{Binding ResetCanvasCommand}" 
                            Background="#6C757D" Foreground="White" ToolTip="Clear the canvas and start fresh"/>

                    <ComboBox Margin="15,0,5,0" VerticalAlignment="Center" Width="120"
                              ItemsSource="{Binding Source={StaticResource ExecutionModes}}"
                              SelectedItem="{Binding SelectedExecutionMode}"/>
                    <Slider Minimum="0" Maximum="500" Width="100" VerticalAlignment="Center"
                            Value="{Binding ExecutionDelay, Delay=100}"/>
                    <TextBlock Text="{Binding ExecutionSpeedText}" VerticalAlignment="Center" Margin="5,0,0,0" FontStyle="Italic" Foreground="#6C757D"/>
                </StackPanel>
                
                <TextBlock Grid.Column="1" Text="{Binding StatusMessage}" VerticalAlignment="Center" Margin="10,0" HorizontalAlignment="Center" FontStyle="Italic" Foreground="#6C757D"/>
                
                <StackPanel Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Center">
                    <TextBlock Text="BG:" ToolTip="{Binding BackgroundImagePath}" VerticalAlignment="Center" Margin="0,0,5,0"/>
                    <Image Source="{Binding BackgroundPreview}" Width="24" Height="24" Margin="0,0,15,0" RenderOptions.BitmapScalingMode="HighQuality"/>
                    <TextBlock Text="Canvas:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                    <TextBox Text="{Binding CanvasWidth, UpdateSourceTrigger=PropertyChanged, Delay=200}" Width="60" VerticalContentAlignment="Center"/>
                    <TextBlock Text="×" VerticalAlignment="Center" Margin="5,0"/>
                    <TextBox Text="{Binding CanvasHeight, UpdateSourceTrigger=PropertyChanged, Delay=200}" Width="60" VerticalContentAlignment="Center"/>
                </StackPanel>
            </Grid>
        </Border>

        <!-- Main Content Area -->
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="300"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*" MinWidth="300"/>
            </Grid.ColumnDefinitions>

            <!-- Code Editor -->
            <Border Grid.Column="0" Margin="0,0,5,0" Background="White" BorderBrush="#DEE2E6" BorderThickness="1" CornerRadius="4">
                <avalonedit:TextEditor
                    FontFamily="Cascadia Code, Consolas, 'Courier New', monospace"
                    FontSize="14"
                    behaviors:TextEditorBehavior.BoundText="{Binding SourceCode, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                    ShowLineNumbers="True"
                    LineNumbersForeground="#6C757D"
                    Background="Transparent"
                    Foreground="#212529"
                    Padding="5"/>
            </Border>
            
            <GridSplitter Grid.Column="1" Width="10" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="Transparent"/>

            <!-- Image Viewer -->
            <Border Grid.Column="2" Margin="5,0,0,0" Background="White" BorderBrush="#DEE2E6" BorderThickness="1" CornerRadius="4">
                <Grid>
                    <!-- Checkerboard Background -->
                    <Grid.Background>
                        <DrawingBrush Viewport="0,0,20,20" ViewportUnits="Absolute" TileMode="Tile">
                            <DrawingBrush.Drawing>
                                <DrawingGroup>
                                    <GeometryDrawing Brush="White">
                                        <GeometryDrawing.Geometry>
                                            <RectangleGeometry Rect="0,0,20,20" />
                                        </GeometryDrawing.Geometry>
                                    </GeometryDrawing>
                                    <GeometryDrawing Brush="LightGray">
                                        <GeometryDrawing.Geometry>
                                            <GeometryGroup>
                                                <RectangleGeometry Rect="0,0,10,10" />
                                                <RectangleGeometry Rect="10,10,10,10" />
                                            </GeometryGroup>
                                        </GeometryDrawing.Geometry>
                                    </GeometryDrawing>
                                </DrawingGroup>
                            </DrawingBrush.Drawing>
                        </DrawingBrush>
                    </Grid.Background>
                    
                    <Image Source="{Binding RenderedImage}" Stretch="Uniform" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                    
                    <!-- CORRECCIÓN: Mejorar el overlay de ejecución -->
                    <Border Background="#80000000" Visibility="{Binding IsExecuting, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock Text="⚙ Executing..." Foreground="White" FontSize="16" HorizontalAlignment="Center"/>
                            <TextBlock Text="Press Stop to cancel" Foreground="LightGray" FontSize="12" HorizontalAlignment="Center" Margin="0,5,0,0"/>
                            <ProgressBar IsIndeterminate="True" Width="200" Height="4" Margin="0,10,0,0" BorderThickness="0"/>
                        </StackPanel>
                    </Border>
                    
                    <TextBlock Text="No image generated yet.
Click 'Run' to execute your code."
                               HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"
                               Foreground="#6C757D" FontStyle="Italic">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsExecuting}" Value="False"/>
                                            <Condition Binding="{Binding RenderedImage}" Value="{x:Null}"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </Border>
        </Grid>
        
        <GridSplitter Grid.Row="3" Height="10" HorizontalAlignment="Stretch" VerticalAlignment="Center" Background="Transparent"/>

        <!-- Output Console -->
        <GroupBox Grid.Row="4" Header="Output Console" Margin="0,5,0,0" Background="White" BorderBrush="#DEE2E6" BorderThickness="1" >
            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                <ListBox ItemsSource="{Binding Messages}" 
                         FontFamily="Cascadia Code, Consolas, 'Courier New', monospace"
                         FontSize="12"
                         Background="Transparent"
                         BorderThickness="0"
                         SelectionMode="Extended">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Padding" Value="5,2"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=., Converter={StaticResource StringContainsConverter}, ConverterParameter='✗'}" Value="True">
                                    <Setter Property="Foreground" Value="#DC3545"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=., Converter={StaticResource StringContainsConverter}, ConverterParameter='✓'}" Value="True">
                                    <Setter Property="Foreground" Value="#28A745"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=., Converter={StaticResource StringContainsConverter}, ConverterParameter='🖼️'}" Value="True">
                                    <Setter Property="Foreground" Value="#17A2B8"/>
                                </DataTrigger>
                                <!-- NUEVO: Estilo para mensajes de canvas reset -->
                                <DataTrigger Binding="{Binding Path=., Converter={StaticResource StringContainsConverter}, ConverterParameter='🎨'}" Value="True">
                                    <Setter Property="Foreground" Value="#6F42C1"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </ScrollViewer>
        </GroupBox>
    </Grid>
</Window>